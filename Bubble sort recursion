import java.util.Arrays;

public class RecursiveBubbleSort {

    // Function to perform bubble sort using recursion
    public static void bubbleSort(int[] arr, int n) {
        // Base case: If the size is 1, the array is already sorted
        if (n == 1) {
            return;
        }

        // One pass of bubble sort: move the largest element to the end
        for (int i = 0; i < n - 1; i++) {
            if (arr[i] > arr[i + 1]) {
                // Swap arr[i] and arr[i + 1]
                int temp = arr[i];
                arr[i] = arr[i + 1];
                arr[i + 1] = temp;
            }
        }

        // Recursive call for the rest of the array
        bubbleSort(arr, n - 1);
    }

    public static void main(String[] args) {
        int[] arr = {64, 34, 25, 12, 22, 11, 90};

        System.out.println("Original array:");
        System.out.println(Arrays.toString(arr));

        // Perform recursive bubble sort
        bubbleSort(arr, arr.length);

        System.out.println("Sorted array:");
        System.out.println(Arrays.toString(arr));
    }
}
